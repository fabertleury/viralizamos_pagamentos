import { PrismaClient } from '@prisma/client';

// Logs para diagn√≥sticos
console.log('DATABASE_URL:', process.env.DATABASE_URL?.substring(0, 20) + '...');
console.log('NODE_ENV:', process.env.NODE_ENV);
console.log('PGHOST:', process.env.PGHOST);
console.log('DATABASE_CONFIG:', JSON.stringify({
  host: process.env.PGHOST,
  port: process.env.PGPORT,
  user: process.env.PGUSER,
  database: process.env.PGDATABASE
}));

// ===== CONFIGURA√á√ÉO DE CONEX√ÉO FOR√áADA =====
// Em produ√ß√£o na Railway, verificamos se estamos com a URL correta
// ou for√ßamos a URL correta para a inst√¢ncia PostgreSQL da Railway
if (process.env.NODE_ENV === 'production') {
  const railwayDbUrl = "postgresql://postgres:zacEqGceWerpWpBZZqttjamDOCcdhRbO@shinkansen.proxy.rlwy.net:29036/railway";
  
  if (!process.env.DATABASE_URL || process.env.DATABASE_URL.includes('localhost')) {
    console.log('‚ö†Ô∏è ATEN√á√ÉO: DATABASE_URL incorreta ou n√£o definida em produ√ß√£o, corrigindo...');
    process.env.DATABASE_URL = railwayDbUrl;
  }
  
  // Log seguro (sem mostrar a senha completa)
  const currentUrl = process.env.DATABASE_URL;
  const maskedUrl = currentUrl.replace(/\/\/([^:]+:)([^@]+)@/, '//***:***@');
  console.log(`‚ÑπÔ∏è [${process.env.NODE_ENV}] Usando DATABASE_URL: ${maskedUrl}`);
} else {
  console.log(`‚ÑπÔ∏è [${process.env.NODE_ENV}] Ambiente de desenvolvimento`);
}

// Fun√ß√£o para inicializar o cliente Prisma com tratamento de erros
function prismaClientSingleton() {
  try {
    // Verifica se temos as configura√ß√µes corretas do banco de dados
    if (!process.env.DATABASE_URL) {
      console.error('DATABASE_URL n√£o definida. Usando conex√£o padr√£o para desenvolvimento.');
    }
    
    // Inicializa o cliente Prisma com log em desenvolvimento
    return new PrismaClient({
      log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],
    });
  } catch (error) {
    console.error('Erro ao inicializar o cliente Prisma:', error);
    throw error;
  }
}

// Tipo global para o cliente Prisma
declare global {
  var prisma: undefined | ReturnType<typeof prismaClientSingleton>;
}

// Exporta o cliente Prisma (singleton)
export const db = globalThis.prisma ?? prismaClientSingleton();

// Atribui √† vari√°vel global em desenvolvimento para evitar m√∫ltiplas inst√¢ncias
if (process.env.NODE_ENV !== 'production') globalThis.prisma = db;

// Validar a conex√£o imediatamente
db.$connect()
  .then(() => console.log('‚úÖ Conex√£o com o banco de dados estabelecida!'))
  .catch(err => {
    console.error('‚ùå ERRO ao conectar com o banco de dados:', err);
    
    // Em produ√ß√£o, tentar reiniciar com a URL correta
    if (process.env.NODE_ENV === 'production') {
      console.log('üîÑ Tentando reconectar com a URL correta da Railway...');
      process.env.DATABASE_URL = "postgresql://postgres:zacEqGceWerpWpBZZqttjamDOCcdhRbO@shinkansen.proxy.rlwy.net:29036/railway";
    }
  }); 